#* TODO Update this doc
This is a template for the RTE editor. This template includes all necessary resources and further templates combined
with includes/editor-base-template.vm

-- Required Parameters:
--   * $formname       - the name of the form the text area is in
--   * $name           - name of the textarea input that gets submitted
--   * $contentType    - the type of the content the textarea will be displayed for.
--   * $contentId      - the id of the content the textarea will be displayed for. Use 0 for new pages.
                         If not specified, it will fallback to using the page or draft id.

-- Optional Parameters:
--   * $heartbeat        - if 'true' and the editor's ajax is enabled, heartbeats are used - otherwise false
--   * $saveDrafts       - if 'true' and the editor's ajax is enabled, drafts are saved - otherwise false
--   * $fullscreen        - if 'true' then the editor should be styled as a fullscreen editor
--   * $autoStart        - if 'true' then the Editor will start automatically when it has loaded. 
                           if 'false' then the Editor will be made ready to start, but won't be activated.
                           The default is false which means you will need to initialise it manually by calling
                           AJS.Rte.BootstrapManager.initialise() with Javascript.                         
--   * $dynamicLoading   - if 'true' then it is assumed the Editor is being loaded dynamically after the initial
                           page render so page metadata will be handled differently and CSS and JS resources
                           won't be requested.
                           if 'false' then standard resource retrieval and metadata behaviour is followed.
*#

<script type="text/x-template" title="editor-css">
    $webResourceManager.getEditorCssResources($spaceKey)
</script>

#set($useHints = $parameters.useHints)
#set($useWatch = $parameters.useWatch)
#set($useRestrictions = $parameters.useRestrictions)
#set($useVersionComment = $parameters.useVersionComment)
#set($useMinorEdit = $parameters.useMinorEdit)
#set($minEditorHeight = $parameters.minEditorHeight)
    
#if ($parameters.heartbeat && $parameters.heartbeat == "true")
    #set( $heartbeat = true)
#else
    #set ( $heartbeat = false )
#end

#if ($parameters.saveDrafts && $parameters.saveDrafts == "true")
    #set( $saveDrafts = true)
#else
    #set ( $saveDrafts = false )
#end

#if ($parameters.autoStart && $parameters.autoStart == "true")
    #set ($autoStart = true)
#else
    #set ($autoStart = false)
#end

#if ($draft.newPage)
    #set ($newPage = true)
#else
    #set ($newPage = false)
#end

#if ($action.wysiwygContent)
    #set($wysiwygContent = $action.wysiwygContent)
#else
    #set($wysiwygContent = $parameters.wysiwygContent)
#end

#if ($parameters.contentId)
    #set($contentId = $parameters.contentId)
#else
    #if ($pageId.toString() == "0" && $draft.id)
        #set($contentId = $draft.id)
    #else
        #set($contentId = $pageId)
    #end
#end

#if ($parameters.contentType == "page" || $parameters.contentType == "blogpost" || $parameters.contentType == "template")
    #set($usePageLayouts = true)
    #set($useInlineTasks = true)
#else
    #set($useInlineTasks = false)
#end

#if ($parameters.contentType == "template")
    #set($attachmentSourceId = 0)
#else
    #set($attachmentSourceId = $action.attachmentSourceContent.id)
#end

#if ($parameters.contentType == "template")
    #set($useTemplates = true)
#end

#if($viewPermissionsUsers || $editPermissionsUsers || $viewPermissionsGroups || $editPermissionsGroups)
    #set ($hasRestrictions = true)
#end

#set ($context = {  "id": "rte",
    "fullscreen": $parameters.fullscreen,
    "minEditorHeight": $parameters.minEditorHeight,
    "usePageLayouts": $usePageLayouts,
    "useInlineTasks": $useInlineTasks,
    "useTemplates": $useTemplates,
    "useHints": $parameters.useHints,
    "useWatch": $parameters.useWatch,
    "useVersionComment": $parameters.useVersionComment,
    "useDraft": $action.useDraft,
    "versionComment": $action.versionComment,
    "useMinorEdit": $parameters.useMinorEdit,
    "shouldResize": $parameters.shouldResize,
    "content": $wysiwygContent,
    "versionMismatch": $versionMismatch,
    "i18n": $action.i18n,
    "req": $req,
    "locale": $action.locale,
    "webResourceManager": $webResourceManager,
    "webInterfaceManager": $webInterfaceManager,
    "webInterfaceContext": $webInterfaceContext,
    "textareaName": "wysiwygContent",
    "fieldErrors": $fieldErrors,
    "userWatchingOwnContent" : $action.isUserWatchingOwnContent(),
    "useDatePicker": $parameters.useDatePicker,
    "postingDate": $parameters.postingDate,
    "darkFeatures": $darkFeatures,
    "dynamicLoading": $parameters.dynamicLoading
    })

#if($parameters.wrapEditorWithContainer == "true")
<div class="editor-container">
#end

#webPanelForLocation("atl.editor" $context)

#if($parameters.wrapEditorWithContainer == "true")
</div>
#end

## Define all page metadata in a Velocity Map so that it can handled as required by the 'dynamicLoading' parameter
#set ($metadataMap = {
    'content-id' : $contentId,
    'content-type' : $parameters.contentType,
    'draft-type' : $parameters.draftType,
    'draft-id' : "$draftId",
    'existing-draft-id' : "$existingDraftId",
    'new-page' : "$newPage",
    'num-attachments' : "$helper.getNumberOfAttachments()",
    'attachment-source-content-id' : "$attachmentSourceId",
    'can-attach-files': "$permissionHelper.canAttachFile($action.authenticatedUser, $action.attachmentSourceContent)",
    'heartbeat': "$heartbeat",
    'save-drafts': "$saveDrafts",
    'min-editor-height': $minEditorHeight,
    'editor-mode': $action.mode,
    'action-locale': "$action.locale",
    'editor-plugin-resource-prefix': $webResourceHelper.getStaticResourcePrefix($action.editorVersion),
    'auto-start': "$autoStart",
    'form-name': $parameters.formname,
    'use-inline-tasks' : "$useInlineTasks",
    'cancel-button-discard-text' : $action.text("discard.name"),
    'cancel-button-close-text' : $action.getText("close.name")
})

#*
 Note that if using dynamicLoading then the metadata rendered here must be extracted
 from the template and appended to the <head> of the document.
 This can be done in Javascript using AJS.renderTemplate('dynamic-editor-metadata') 
*#
#if ($parameters.dynamicLoading == "true")
<script type="text/x-template" title="dynamic-editor-metadata">
    #foreach( $key in $metadataMap.keySet() )
        #renderMetadatum($key, $metadataMap.get($key))
    #end
    #webPanelForLocation("atl.editor.settings" $context)
</script>
#else
    #requireResourcesForContext("editor")
    #requireResourcesForContext("macro-browser")
    #foreach( $key in $metadataMap.keySet() )
        #putMetadata($key, $metadataMap.get($key))
    #end
    #webPanelForLocation("atl.editor.settings" $context)
#end

#if($useRestrictions)
## The actual data submitted on page save.

<div id="hidden-permission-fields" class="hidden">
    <input id="viewPermissionsUsers" type="text" name="viewPermissionsUsers" value="$!viewPermissionsUsers">
    <input id="editPermissionsUsers" type="text" name="editPermissionsUsers" value="$!editPermissionsUsers">
    <input id="viewPermissionsGroups" type="text" name="viewPermissionsGroups" value="$!viewPermissionsGroups">
    <input id="editPermissionsGroups" type="text" name="editPermissionsGroups" value="$!editPermissionsGroups">
</div>
#end

## Templates
#parse("/template/includes/table-dialog-templates.vm")
